{"version":3,"sources":["Component/RowTable/RowTable.jsx","Component/Table/Table.jsx","App.js","serviceWorker.js","index.js"],"names":["RowTable","item","this","props","className","id","name","last_name","email","onclick","class","Component","Table","state","search","handleChange","event","target","value","setState","handleAdd","push","show_form","el","document","getElementById","classList","add","console","log","hide_form","remove","filtersearch","filter","toLowerCase","startsWith","type","onChange","scope","map","key","for","placeholder","required","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.441996f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './RowTable.scss';\r\n\r\nexport default class RowTable extends Component {\r\n    render() {\r\n        const { item } = this.props;\r\n        return (\r\n            <tbody className=\"row-table\">\r\n                <tr>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.last_name}</td>\r\n                    <td>{item.email}</td>\r\n                    <button onclick=\"delete_contact(1)\" class=\"btn btn-danger\"> <i class=\"fa fa-trash\"></i></button>\r\n                    <button onclick=\"edit(1)\" class=\"btn btn-primary\"> <i class=\"fa fa-edit\"></i></button>\r\n                </tr>\r\n            </tbody>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport RowTable from '../RowTable/RowTable';\r\nimport './Table.scss';\r\n\r\nexport default class Table extends Component {\r\n    state = {\r\n        item: [\r\n            { id: 1, name: \"mohammad\", last_name: \"ahmadi\", email: \"mohammad@gmail.com\" },\r\n            { id: 2, name: \"ali\", last_name: \"hoseini\", email: \"ali@gmail.com\" },\r\n            { id: 3, name: \"hasan\", last_name: \"hasani\", email: \"hasan@gmail.com\" },\r\n        ],\r\n        search: \"\" ,\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleAdd = () => {\r\n        const item = this.state.item;\r\n        item.push('new item')\r\n        this.setState({ item: item })\r\n    }\r\n\r\n    show_form = () => {\r\n        const el = document.getElementById('form')\r\n        el.classList.add(\"show\");\r\n        console.log(el.classList.add(\"show\"));\r\n      }\r\n  \r\n    hide_form = () => {\r\n        const el = document.getElementById('form');\r\n        el.classList.remove(\"show\");\r\n      }\r\n\r\n    render() {\r\n        const { item, search,  } = this.state;\r\n        let filtersearch = item.filter(item => item.name.toLowerCase().startsWith(search.toLowerCase()));\r\n        return (\r\n            <div>\r\n                <input type=\"text\" name=\"search\" onChange={this.handleChange} value={search} />\r\n                <div className=\"table-phone\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">id</th>\r\n                                <th scope=\"col\">name</th>\r\n                                <th scope=\"col\">last name</th>\r\n                                <th scope=\"col\">email</th>\r\n                                <th scope=\"col\">action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {filtersearch.map(item => (\r\n                            <RowTable key={item.id} item={item} />\r\n                        ))}\r\n                    </table>\r\n\r\n                    <div id=\"form\">\r\n                        <form id=\"contact_form\">\r\n                            <div className=\"form-group\">\r\n                                <label for=\"id_name\">ID: </label>\r\n                                <input type=\"number\" name=\"id\" className=\"form-control\" id=\"id_id\" placeholder=\"id of contact\" required=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"id_name\">Name: </label>\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"id_name\" placeholder=\"Enter name\" required=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"id_last_name\">Last name: </label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" id=\"id_last_name\" placeholder=\"Enter last name\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"id_phone\">phone: </label>\r\n                                <input type=\"phone\" name=\"phone\" className=\"form-control\" id=\"id_phone\" placeholder=\"Enter Phone\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"id_email\">Email: </label>\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"id_email\" placeholder=\"Enter Email\" />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button type=\"reset\" className=\"btn btn-primary\">Clear</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onclick={this.show_form}>Add</button>\r\n                <button className=\"btn btn-secondary\" onclick={this.hide_form}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Table from './Component/Table/Table';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Table />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}